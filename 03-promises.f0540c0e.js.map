{"mappings":"gfAQAA,EAAA,SAEA,IAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBAChBD,SAASC,cAAc,mBAGhD,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdWL,SAASC,cAAc,yBAkB/BY,iBAAiB,SAE3B,SAAqBC,GACnBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,SAASlB,EAAWmB,OAC5BC,EAAOF,SAASf,EAAUgB,OAC1BE,EAASH,SAASI,eAAeH,OAE5BI,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAElCnB,EADemB,EAAI,EACKN,GACrBO,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAC5DuB,cAAc,G,IAGjBC,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,OAAOK,QAAQ,oBAAmCH,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAC3DuB,cAAc,G,IAGpBZ,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nimport Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountOfPromises = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nsubmitBtn.addEventListener('click', handleClick);\n\nfunction handleClick(event) {\n  event.preventDefault();\n\n  let delay = parseInt(firstDelay.value);\n  let step = parseInt(delayStep.value);\n  let amount = parseInt(amountPromises.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      });\n    delay += step;\n  }\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","amountPromises","i","then","param","Notify","success","concat","clickToClose","catch","failure"],"version":3,"file":"03-promises.f0540c0e.js.map"}